/// Persistent class with intents in a session
Class IBSP.Notice.DAT.SessionIntent Extends (%Persistent, %JSON.Adaptor)
{

/// Session
Property Session As IBSP.Notice.DAT.Session;

/// Date when the input from the user is introduced 
Property InputDate As %DateTime;

/// Date when the output from the system is generated 
Property OuputDate As %DateTime;

/// Input text send by the user
Property InputText As %String(MAXLEN = "");

/// Output text generated by the system
Property OutputText As %String(MAXLEN = "");

/// Current Status into the Workflow
Property CurrentStatus As IBSP.Notice.DAT.WFStatus;

/// Next Intent in the Workflow
Property NextIntent As IBSP.Notice.DAT.SessionIntent;

ForeignKey FKSession(Session) References IBSP.Notice.DAT.Session() [ SqlName = FK_SessionIntent_Session ];

ForeignKey FKStatus(CurrentStatus) References IBSP.Notice.DAT.WFStatus() [ SqlName = FK_IntentStatus_WFStatus ];

ForeignKey FKSessionIntent(NextIntent) References IBSP.Notice.DAT.SessionIntent() [ SqlName = FK_NextSessionIntent_SessionIntent ];

Storage Default
{
<Data name="SessionIntentDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Session</Value>
</Value>
<Value name="3">
<Value>InputDate</Value>
</Value>
<Value name="4">
<Value>OuputDate</Value>
</Value>
<Value name="5">
<Value>InputText</Value>
</Value>
<Value name="6">
<Value>OutputText</Value>
</Value>
<Value name="7">
<Value>CurrentStatus</Value>
</Value>
<Value name="8">
<Value>NextIntent</Value>
</Value>
</Data>
<DataLocation>^IBSP.Notice.DAT.SessionIntentD</DataLocation>
<DefaultData>SessionIntentDefaultData</DefaultData>
<IdLocation>^IBSP.Notice.DAT.SessionIntentD</IdLocation>
<IndexLocation>^IBSP.Notice.DAT.SessionIntentI</IndexLocation>
<StreamLocation>^IBSP.Notice.DAT.SessionIntentS</StreamLocation>
<Type>%Storage.Persistent</Type>
}

}
